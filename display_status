#!/bin/bash
#==================================================
# Script Name   :       check_stock_status
# Purpose       :       Displays products based on stock status (Available or Low).
#==================================================

prods="./res/IPSdataset.txt"
source ./res/my_funcs

# Constants
low="low_stock_temp.txt"
avail="avail_stock_temp.txt"

# Clear temporary files
clear_temp_files() {
    > "$low"
    > "$avail"
}

# Load products into respective files based on stock status
load_products() {
    while IFS=":" read -r pid name categ supp price quan sales max; do
        twenty_percent=$((max / 5))
        if (( quan <= twenty_percent )); then
            echo "$pid:$name:$categ:$supp:$price:$quan:$sales" >> "$low"
        else
            echo "$pid:$name:$categ:$supp:$price:$quan:$sales" >> "$avail"
        fi
    done < "$prods"
}

# Count products in a file
count_products() {
    local file="$1"
    if [[ -s "$file" ]]; then
        echo "$(wc -l < "$file")"
    else
        echo "0"
    fi
}

# Display stock products
display_products() {
    local option="$1"
    clear
    center_text_center_align "=================================================="
    center_text_center_align "Product Stock Status"
    center_text_center_align "=================================================="
    echo -e "\n"

    if [[ "$option" =~ [Ll]ow ]]; then
        if [[ ! -s "$low" ]]; then
            center_text_center_align "The inventory has sufficient stock!"
            read -p "$(center_text_center_align 'Press [ENTER] to continue...')" enter
            return
        fi
        center_text_center_align "Low Stock Products"
    else
        if [[ ! -s "$avail" ]]; then
            center_text_center_align "All products are low on stock! Please restock as soon as possible!"
            read -p "$(center_text_center_align 'Press [ENTER] to continue...')" enter
            return
        fi
        center_text_center_align "Available Products"
    fi

    center_text "$(printf '%-15s%-35s%-30s%-5s\n' 'Product ID' 'Name' 'Category' 'Quantity')"
    center_text "$(printf '%-15s%-35s%-30s%-5s\n' '============' '============' '============' '============')"

    local product_list="$([[ "$option" =~ [Ll]ow ]] && echo "$low" || echo "$avail")"
    while IFS=":" read -r pid name categ supp price quan sale; do
        center_text "$(printf '%-15s%-35s%-30s%-5s\n' "$pid" "$name" "$categ" "$quan")"
    done < "$product_list"

    local product_count=$(count_products "$product_list")
    center_text "$product_count products are $option"
    read -p "$(center_text 'Press [ENTER] to go back...')" enter
}

# Main loop
while true; do
    clear
    read -p "$(center_text 'Check [Available] or [Low] Stock products (Press any key to exit): ')" option
    clear_temp_files
    load_products

    if [[ "$option" =~ [Aa]vailable || "$option" =~ [Ll]ow ]]; then
        display_products "$option"
    else
        center_text "Exiting..."
        read -p "$(center_text 'Press [ENTER] to continue...')" enter
        break
    fi
done

# Clean up temporary files
rm "$low" "$avail"
