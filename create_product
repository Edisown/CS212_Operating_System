#!/bin/bash
#====================================
# Author: Dadpaas, Renz C.
# Script: Create Product
#====================================
source ./res/my_funcs

# Function to get slot allotment based on category
get_product_allotment() {
    local category=$1
    case "$category" in
        "Condiments") echo 160 ;;
        "Chips & Crackers") echo 140 ;;
        "Pet Supplies") echo 100 ;;
        "Pasta & Noodles") echo 120 ;;
        "Frozen Meats") echo 240 ;;
        "Frozen Desserts") echo 120 ;;
        "Bread & Bakery") echo 200 ;;
        "Biscuits & Cookies") echo 140 ;;
        "Beverages") echo 300 ;;
        "Instant Noodles") echo 100 ;;
        "Dairy & Eggs") echo 200 ;;
        "Canned Goods") echo 180 ;;
        *) echo "Invalid" ;;
    esac
}

while true; do
    clear
    echo -e "\n\n\n\n\n"
    center_text_center_align "========================"
    center_text_center_align "Add Product"
    center_text_center_align "========================"
    center_text_center_align "Product Properties"

    read -p "$(center_text 'Product ID: ')" pid
    read -p "$(center_text 'Product Name: ')" pname
    read -p "$(center_text 'Supplier: ')" supplier
    read -p "$(center_text 'Price: ')" price
    read -p "$(center_text 'Initial Quantity: ')" quantity

    # Validate that price is a positive number
    if ! [[ "$price" =~ ^[0-9]+(\.[0-9]+)?$ ]]; then
        center_text "Enter a valid number for price..."
        read -p "$(center_text 'Press [ENTER] to continue...')" enter
        continue
    fi

    # Validate that quantity is a positive integer
    if ! [[ "$quantity" =~ ^[0-9]+$ ]]; then
        center_text "Enter a valid number for quantity..."
        read -p "$(center_text 'Press [ENTER] to continue...')" enter
        continue
    fi

    echo -e "\n"
    read -p "$(center_text 'Add Product? [Y/N]?: ')" choice

    if [[ "$choice" == [Nn] ]]; then
        center_text "Add product cancelled..."
        read -p "$(center_text 'Press [ENTER] to continue...')" enter
        clear
        break
    fi

    # Extract the product code prefix (first 2 characters)
    code=$(echo ${pid} | awk '{print substr($0, 1, 2)}')

    category=""
    case "$code" in
        "CC") category="Chips & Crackers" ;;
        "CN") category="Condiments" ;;
        "PN") category="Pasta & Noodles" ;;
        "DE") category="Dairy & Eggs" ;;
        "FD") category="Frozen Desserts" ;;
        "BV") category="Beverages" ;;
        "BB") category="Bread & Bakery" ;;
        "IN") category="Instant Noodles" ;;
        "BC") category="Biscuits & Cookies" ;;
        "CG") category="Canned Goods" ;;
        "FM") category="Frozen Meats" ;;
        "PS") category="Pet Supplies" ;;
        *) category="Invalid" ;;
    esac

    if [[ "$category" == "Invalid" ]]; then
        center_text "Product code not applicable..."
        read -p "$(center_text 'Add again? [Y/N]: ')" option
        if [[ "$option" == [Yy] ]]; then
            continue
        else
            center_text "Add product cancelled..."
            break
        fi
    else
        product_allotment=$(get_product_allotment "$category")
        
        center_text "Adding product..."
        center_text "==============================="
        center_text "Product ID: $pid"
        center_text "Product Name: $pname"
        center_text "Category: $category"
        center_text "Supplier: $supplier"
        center_text "Price: $price"
        center_text "Quantity: $quantity"
        echo -e "\n"

        # Append the new product to the dataset file with slot allotment
        echo "$pid:$pname:$category:$supplier:$price:$quantity:$slot_allotment" >> ./res/IPSdataset.txt

        read -p "$(center_text 'Add more? [Y/N]: ')" option
        if [[ "$option" == [Yy] ]]; then
            clear
            continue
        else
            center_text "Add product cancelled..."
            read -p "$(center_text 'Press [ENTER] to continue...')" enter
            clear
            break
        fi
    fi
done
